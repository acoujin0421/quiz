<!DOCTYPE html>
<!--
Created using JS Bin
http://jsbin.com

Copyright (c) 2024 by anonymous (http://jsbin.com/goxuganoba/1/edit)

Released under the MIT license: http://jsbin.mit-license.org
-->
<meta name="robots" content="noindex">
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>닉네임 입력</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f5f5f5;
        }

        form {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        input {
            padding: 8px;
            font-size: 16px;
        }

        button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="app"></div>
    <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <script type="text/babel">
        const { useState } = React;

        function App() {
            const [nickname, setNickname] = useState('');
            const [message, setMessage] = useState('');

            const fetchMessage = async () => {
                try {
                    const response = await fetch('https://revoirb612.pythonanywhere.com/helloworld');
                    const data = await response.json(); // JSON 객체로 응답을 변환
                    setMessage(data.message); // 'message' 키에 해당하는 값을 사용
                } catch (error) {
                    console.error("There was an error:", error);
                }
            };

            const handleSubmit = (e) => {
                e.preventDefault();
                fetchMessage();
            };

            return (
                <div>
                    <form onSubmit={handleSubmit}>
                        <label htmlFor="nickname">닉네임을 입력하고 입장해주세요:</label>
                        <input
                            id="nickname"
                            type="text"
                            value={nickname}
                            onChange={(e) => setNickname(e.target.value)}
                            required
                        />
                        <button type="submit">입장하기</button>
                    </form>
                    {message && <p>{message}</p>}
                </div>
            );
        }

        ReactDOM.render(<App />, document.getElementById('app'));
    </script>
</body>
</html>
